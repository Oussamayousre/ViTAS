port: 20010
model:
    backbone:
        init_stem: [1, 3, [14, 16, 32], [], 768, [], [], True, ['Patch_init']]
        Block: [13, 768, [3, 6, 12, 16], 2880, 768, 2880, 768, True, ['Block']]
        Norm: [1, 768, [], [], [], [], [], 'token', ['Norm']]
        FC: [1, 768, [], [], 1000, [], [], False, ['FC']]
    depth: 16
    heads_share: True
    qkv: 2

search:
    flag: False

    strategy:
        max_epochs: 300
        optimizer:
            type: 'SGD'
            lr: 0.001
            weight_decay: 0.05

        kwargs:
            search: True
            Block_heads: [3, 6, 12, 16]
            channel_percent: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
            side_scheme: 'BCNet'    # ['AutoSlim', 'BCNet']
            heads_share: True
            mix_up: False
            warm_up: 5
            ps_num: 1000 # prop search num each iteration

        task_type: 'imagenet'
        snapshot_freq: 10000
        print_freq: 20
        resume: True
        save_path: '../ViTAS_pth/4.9G_pth'
        load_name: 'recent_ckpt.pth.tar'

    data:
        data_dir: your train data path
        workers: 8  # dataloader worker num
        task_type: 'imagenet'
        augmentation: 'deit_xaa_xcj'
        batch_size: 1024

sample:
    flag: False
    sampler:
        type: 'evolution'
        kwargs:
            init_pop: True
            pop_size: 50
            n_gens: 40
            sample_num: 10
            cal_train_mode: True
            flops_constraint: 5000000000
            flops_min: 4800000000
            channel_percent: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
            search_id: False
            ps_num: 1000
            side_scheme: 'BCNet'
    strategy:
        task_type: 'imagenet-test'
        snapshot_freq: 2000
        print_freq: 20
        save_path: None 
        load_name: 'epoch_299_ckpt.pth.tar'

    data:
        data_dir: your val data path
        workers: 8  # dataloader worker num
        task_type: 'imagenet-test'
        augmentation: False
        batch_size: 1024 # for all gpus


retrain:
    flag: False
    model:
        backbone:
            init_stem: [1, 3, [14, 16, 32], [], 768, [], [], True, ['Patch_init']]
            Block: [13, 768, [3, 6, 12, 16], 2880, 768, 2880, 768, True, ['Block']]
            Norm: [1, 768, [], [], [], [], [], 'token', ['Norm']]
            FC: [1, 768, [], [], 1000, [], [], False, ['FC']]
        net_id: '1 3 3 3 3 3 3 3 3 3 3 3 3 3 0 0 3 2 5 0 7 5 2 3 6 6 2 4 4 8 7 4 6 7 2 6 1 6 6 4 7 5 7'
        drop_path_rate: 0.1
        channel_percent: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
        model_len: 16
        depth: 13


    strategy:
        max_epochs: 300
        optimizer:
            lr: 0.001
            weight_decay: 0.05

        kwargs:
            search: False
            mix_up: True
            warm_up: 5

        task_type: 'imagenet'
        snapshot_freq: 2000
        print_freq: 20
        resume: True
        save_path: None
        load_name: 'recent_ckpt.pth.tar'

    data:
        data_dir: your train data path
        workers: 8  # dataloader worker num
        task_type: 'imagenet'
        augmentation: 'deit'
        batch_size: 1024

test:
    flag: True
    model:
        backbone:
            init_stem: [1, 3, [14, 16, 32], [], 768, [], [], True, ['Patch_init']]
            Block: [13, 768, [3, 6, 12, 16], 2880, 768, 2880, 768, True, ['Block']]
            Norm: [1, 768, [], [], [], [], [], 'token', ['Norm']]
            FC: [1, 768, [], [], 1000, [], [], False, ['FC']]
        net_id: '1 3 3 3 3 3 3 3 3 3 3 3 3 3 0 0 3 2 5 0 7 5 2 3 6 6 2 4 4 8 7 4 6 7 2 6 1 6 6 4 7 5 7'
        drop_path_rate: 0.0
        channel_percent: [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1.0]
        model_len: 16
        depth: 13
        

    strategy:
        task_type: 'imagenet-test'
        save_path: '../generalNAS_exp/imagenet_proxyless_mobile/checkpoint'
        start: 299
        end: 300
        strip: 1

    data:
        data_dir: your test data path
        workers: 8  # dataloader worker num
        task_type: 'imagenet-test'
        batch_size: 1024 # for all gpus

